// === üìå –í—Å—Ç–∞–≤–∫–∞ SVG ===
function insertSVG(url, containerId, callback) {
  fetch(url)
    .then(response => response.text())
    .then(data => {
      const container = document.getElementById(containerId);
      container.innerHTML = data;
      if (callback) callback(container);
    })
    .catch(error => {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è SVG (${url}):`, error);
    });
}

// === üìå –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è SVG ===
insertSVG('./assets/img/logo/logo2.svg', 'logo-header');
insertSVG('./assets/img/icons/arrow-down.svg', 'down-arrow-language', () => {
  const downArrow = document.querySelector('#down-arrow-language svg');
  const languageSwitcherButton = document.querySelector('.language-switcher__button');
  const languageSwitcher = document.querySelector('.language-switcher');
  const languageDropdown = document.querySelector('.language-switcher__dropdown');

  function closeLanguageMenu() {
    languageSwitcher.classList.remove('open');
    languageDropdown.classList.remove('open');
    if (downArrow) downArrow.classList.remove('rotated');
    languageSwitcherButton.setAttribute('aria-expanded', 'false');
  }

  languageSwitcherButton.addEventListener('click', function (event) {
    event.stopPropagation();
    const isOpen = languageSwitcher.classList.contains('open');
    if (isOpen) {
      closeLanguageMenu();
    } else {
      languageSwitcher.classList.add('open');
      languageDropdown.classList.add('open');
      if (downArrow) downArrow.classList.add('rotated');
      languageSwitcherButton.setAttribute('aria-expanded', 'true');
    }
  });

  // === üìå –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –º–æ–≤–∏ –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –µ–ª–µ–º–µ–Ω—Ç–æ–º
  document.addEventListener('click', (e) => {
    if (!languageSwitcher.contains(e.target)) {
      closeLanguageMenu();
    }
  });

  // === üìå –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –º–æ–≤–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
  window.addEventListener('scroll', () => {
    closeLanguageMenu();
  });

  // === üìå –õ–æ–≥—ñ–∫–∞ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º–æ–≤–∏
  languageDropdown.querySelectorAll("button[data-lang]").forEach(langButton => {
    langButton.addEventListener("click", () => {
      const lang = langButton.getAttribute("data-lang");
      const pathParts = location.pathname.split("/");
      const currentFile = pathParts.pop() || "index.html";
      const isInEnFolder = pathParts.includes("en");

      let newPath;
      if (lang === "en" && !isInEnFolder) {
        newPath = "/en/" + currentFile;
      } else if (lang === "ua" && isInEnFolder) {
        newPath = "/" + currentFile;
      } else {
        return;
      }

      window.location.href = newPath;
    });
  });
});


// === üìå –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—É–Ω–∫—Ç—É –º–µ–Ω—é
const currentPath = window.location.pathname.split('/').pop() || 'index.html';
document.querySelectorAll('.nav-list a').forEach(link => {
  const linkPath = link.getAttribute('href').split('/').pop();
  if (linkPath === currentPath) {
    link.classList.add('active');
    link.addEventListener('click', e => {
      e.preventDefault();
    });
  } else {
    link.classList.remove('active');
  }
});


// === üìå –õ–æ–≥—ñ–∫–∞ –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
const hamburger = document.getElementById('hamburger');
const nav = document.getElementById('nav');
const header = document.querySelector('.header'); // –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ —Å—é–¥–∏

hamburger.addEventListener('click', () => {
  const isActive = nav.classList.toggle('active');
  hamburger.classList.toggle('active');

  // –î–æ–¥–∞—î–º–æ/–∑–Ω—ñ–º–∞—î–º–æ –∫–ª–∞—Å –¥–ª—è —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ–≥–æ —Ö–µ–¥–µ—Ä–∞
  if (isActive) {
    header.classList.add('fixed-header');
    document.body.classList.add('no-scroll'); // —â–æ–± –∑–∞ –ø–æ—Ç—Ä–µ–±–∏ –±–ª–æ–∫—É–≤–∞—Ç–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫—É
  } else {
    header.classList.remove('fixed-header');
    document.body.classList.remove('no-scroll');
  }
});


// === üìå –õ–æ–≥—ñ–∫–∞ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ö–µ–¥–µ—Ä–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
// –ó–º—ñ–Ω–Ω—ñ –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
let lastScrollTop = 0;
let headerPosition = 0;

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ö–µ–¥–µ—Ä–∞ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ –≤–Ω–∏–∑
function headerScrollHandler() {
  const nav = document.getElementById('nav');
  const header = document.querySelector('.header');
  if (nav && nav.classList.contains('active')) return; // –º–µ–Ω—é –≤—ñ–¥–∫—Ä–∏—Ç–µ ‚Äî –Ω–µ —Ö–æ–≤–∞—Ç–∏

  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

  if (scrollTop > lastScrollTop) {
    headerPosition = Math.min(headerPosition + (scrollTop - lastScrollTop), header.offsetHeight);
  } else {
    headerPosition = Math.max(headerPosition - (lastScrollTop - scrollTop), 0);
  }

  header.style.top = -headerPosition + 'px';
  lastScrollTop = scrollTop;
}

function applyUserSettings() {
  const header = document.querySelector('.header');
  const main = document.querySelector('main');
  const nav = document.getElementById('nav');
  const settings = JSON.parse(localStorage.getItem('siteSettings')) || {};

  // –°–∫–∏–¥–∞—î–º–æ –∫–ª–∞—Å–∏ —ñ —Å—Ç–∏–ª—ñ
  header.classList.remove('fixed', 'hidden', 'always-fixed');
  main.style.paddingTop = '0px';
  header.style.top = '0';

  // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å–ª—É—Ö–∞—á —Å–∫—Ä–æ–ª—É, —è–∫—â–æ —î
  window.removeEventListener('scroll', headerScrollHandler);
  lastScrollTop = 0;
  headerPosition = 0;

  if (settings.fixedHeader === true) {
    // –§—ñ–∫—Å–æ–≤–∞–Ω–∞ –∑ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è–º –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
    header.classList.add('fixed');
    main.style.paddingTop = header.offsetHeight + 'px';
    window.addEventListener('scroll', headerScrollHandler);

  } else if (settings.fixedHeader === "always") {
    // –§—ñ–∫—Å–æ–≤–∞–Ω–∞, –∑–∞–≤–∂–¥–∏ –∑–≤–µ—Ä—Ö—É –±–µ–∑ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è
    header.classList.add('fixed', 'always-fixed');
    main.style.paddingTop = header.offsetHeight + 'px';
    header.style.top = '0'; // –∑–∞–≤–∂–¥–∏ –∑–≤–µ—Ä—Ö—É

  } else {
    // –ù–µ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∞
    main.style.paddingTop = '0px';
  }

  // –¢–µ–º–∞
  if (settings.theme === 'dark') {
    document.body.classList.add('dark-theme');
  } else {
    document.body.classList.remove('dark-theme');
  }

  // –ê–∫—Ü–µ–Ω—Ç–Ω–∏–π –∫–æ–ª—ñ—Ä
  if (settings.accentColor) {
    document.documentElement.style.setProperty('--accent-color', settings.accentColor);
  }
}








// –≤—Å—Ç–∞–≤–∫–∞ –∑–æ–±—Ä–∞–∂–µ–Ω—å –≤ mobile-social-list"
const githubLogo = document.getElementById('github-logo-mobile-menu');
const dribbleLogo = document.getElementById('dribble-logo-mobile-menu');
const figmaLogo = document.getElementById('figma-logo-mobile-menu');

const svgFiles = [
  './assets/img/logo/github.svg',
  './assets/img/logo/dribble.svg',
  './assets/img/logo/figma.svg'
];

const logos = [githubLogo, dribbleLogo, figmaLogo];

logos.forEach((logo, index) => {
  const svgFile = svgFiles[index];
  fetch(svgFile)
    .then(response => response.text())
    .then(svgContent => {
      logo.innerHTML = svgContent;
    });
});


window.addEventListener('DOMContentLoaded', () => {
  applyUserSettings();
});



// === üìå –ü–µ—Ä–µ–º–∏–∫–∞—á —Ñ—ñ–∫—Å–∞—Ü—ñ—ó —Ö–µ–¥–µ—Ä–∞ + padding –¥–ª—è main
function applyUserSettings() {
  const header = document.querySelector('.header');
  const main = document.querySelector('main');
  const nav = document.getElementById('nav'); // –±—É—Ä–≥–µ—Ä –º–µ–Ω—é
  const settings = JSON.parse(localStorage.getItem('siteSettings')) || {};

  // –°–∫–∏–¥–∞—î–º–æ –∫–ª–∞—Å–∏ —ñ —Å—Ç–∏–ª—ñ
  header.classList.remove('fixed', 'hidden', 'always-fixed');
  main.style.paddingTop = '0px';

  // –ó–Ω—ñ–º–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ —Å–∫—Ä–æ–ª—É, —è–∫—â–æ –±—É–≤
  if (window.headerScrollHandler) {
    window.removeEventListener('scroll', window.headerScrollHandler);
    window.headerScrollHandler = null;
  }
  header.style.top = '0';

  if (settings.fixedHeader === true) {
    // –§—ñ–∫—Å–æ–≤–∞–Ω–∞ –∑ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è–º
    header.classList.add('fixed');
    main.style.paddingTop = header.offsetHeight + 'px';

    window.headerScrollHandler = function () {
      if (nav && nav.classList.contains('active')) return; // —è–∫—â–æ –º–µ–Ω—é –≤—ñ–¥–∫—Ä–∏—Ç–æ

      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      if (!window.lastScrollTop) window.lastScrollTop = 0;
      if (!window.headerPosition) window.headerPosition = 0;

      if (scrollTop > window.lastScrollTop) {
        window.headerPosition = Math.min(window.headerPosition + (scrollTop - window.lastScrollTop), header.offsetHeight);
      } else {
        window.headerPosition = Math.max(window.headerPosition - (window.lastScrollTop - scrollTop), 0);
      }

      header.style.top = -window.headerPosition + 'px';
      window.lastScrollTop = scrollTop;
    };

    window.addEventListener('scroll', window.headerScrollHandler);

  } else if (settings.fixedHeader === "always") {
    // –§—ñ–∫—Å–æ–≤–∞–Ω–∞ —ñ –∑–∞–≤–∂–¥–∏ –∑–≤–µ—Ä—Ö—É (–±–µ–∑ –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è)
    header.classList.add('fixed', 'always-fixed');
    main.style.paddingTop = header.offsetHeight + 'px';
    header.style.top = '0';

  } else {
    // fixedHeader false –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π ‚Äî –∑–≤–∏—á–∞–π–Ω–∞ —à–∞–ø–∫–∞
    main.style.paddingTop = '0px';
  }

  // –¢–µ–º–∏ —ñ –∫–æ–ª—å–æ—Ä–∏ ‚Äî –±–µ–∑ –∑–º—ñ–Ω
  if (settings.theme === 'dark') {
    document.body.classList.add('dark-theme');
  } else {
    document.body.classList.remove('dark-theme');
  }

  if (settings.accentColor) {
    document.documentElement.style.setProperty('--accent-color', settings.accentColor);
  }
}



function enableDynamicHeaderAtTop() {
  const header = document.querySelector('.header');
  const main = document.querySelector('main');

  let lastScrollTop = 0;
  let headerPosition = 0;
  let forceFixed = false; // —Ä–µ–∂–∏–º "—Ñ—ñ–∫—Å–æ–≤–∞–Ω–∞ –Ω–∞ 0"

  function dynamicHeaderHandler() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    if (scrollTop === 0 && !forceFixed) {
      // === üß∑ –§—ñ–∫—Å—É—î–º–æ —à–∞–ø–∫—É –Ω–∞ —Å–∞–º–æ–º—É –≤–µ—Ä—Ö—É
      forceFixed = true;
      header.classList.add('fixed', 'always-fixed');
      header.style.top = '1px';
      main.style.paddingTop = header.offsetHeight + 'px';
      return;
    }

    if (scrollTop > 1 && forceFixed) {
      // === üí® –í–∏–º–∏–∫–∞—î–º–æ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º
      forceFixed = false;
      header.classList.remove('always-fixed');
      main.style.paddingTop = header.offsetHeight + 'px';
    }

    // –ü–ª–∞–≤—É—á–∞ –ª–æ–≥—ñ–∫–∞ (—Ö–æ–≤–∞–Ω–Ω—è –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ)
    if (!forceFixed) {
      if (scrollTop > lastScrollTop) {
        headerPosition = Math.min(headerPosition + (scrollTop - lastScrollTop), header.offsetHeight);
      } else {
        headerPosition = Math.max(headerPosition - (lastScrollTop - scrollTop), 0);
      }

      header.style.top = -headerPosition + 'px';
    }

    lastScrollTop = scrollTop;
  }

  window.addEventListener('scroll', dynamicHeaderHandler);
}
